/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */
version = "0.0.1-SNAPSHOT"
group = "dev.bburnett"

plugins {

    // Apply the java-library plugin for API and implementation separation.
    `java-library`
    `maven-publish`
    signing
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    // Use the JUnit 5 integration.
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.9.2")

    implementation("com.fasterxml.jackson.core:jackson-databind:2.15.0")

    implementation("com.google.code.gson:gson:2.10.1")

    // https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-jaxrs2
    implementation("io.swagger.core.v3:swagger-jaxrs2:2.2.9")

    // https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-core
    implementation("io.swagger.core.v3:swagger-core:2.2.9")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

/*
signing {
    sign(publishing.publications["mavenJava"])
}
 */


publishing {
    publications {
        create<MavenPublication>("mavenJava") {
            pom {
                artifactId = "gson-swagger-core"
                name.set(artifactId)
                description.set("A set of libraries to help use gson annotations when generating an OpenAPI doc with swagger-core")
                url.set("https://github.com/bcb44/gson-swagger-core")
                packaging = "jar"
                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("https://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }
            }
            repositories {
                maven {
                    val releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                    val snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                    url = uri(if (version.toString().endsWith("SNAPSHOT")) snapshotsRepoUrl else releasesRepoUrl)
                    credentials {
                        username = project.properties["ossrhUsername"].toString()
                        password = project.properties["ossrhPassword"].toString()
                    }
                }
            }
            from(components["java"])
        }
    }
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}